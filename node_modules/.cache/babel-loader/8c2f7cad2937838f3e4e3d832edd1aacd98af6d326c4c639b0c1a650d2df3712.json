{"ast":null,"code":"var _jsxFileName = \"D:\\\\srms\\\\StudentGradesystem\\\\client\\\\src\\\\Components\\\\SelectionPage\\\\InchargePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InchargePage = ({\n  lecturerName,\n  userRole\n}) => {\n  _s();\n  const [subjects, setSubjects] = useState([]);\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [additionalOptions, setAdditionalOptions] = useState([]);\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  useEffect(() => {\n    const fetchSubjects = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/subjects/lecturer?lecturerName=${lecturerName}`);\n        // Check if the response data is an array before setting state\n        if (Array.isArray(response.data.data.subjects)) {\n          // Accessing subjects from data property\n          setSubjects(response.data.data.subjects);\n        } else {\n          console.error('Invalid subjects data:', response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching subjects:', error.message);\n      }\n    };\n    fetchSubjects();\n  }, [lecturerName]);\n  useEffect(() => {\n    // Additional options based on the selected subject\n    if (selectedSubject) {\n      setAdditionalOptions(['ICAE', 'Final First Marking', 'Final Second Marking', 'Composite Sheet']);\n    } else {\n      setAdditionalOptions([]);\n    }\n  }, [selectedSubject]);\n  const handleSubjectChange = e => {\n    setSelectedSubject(e.target.value);\n  };\n\n  // Handle navigation to the selected option\n  const handleOptionSelect = option => {\n    // Navigate to the page corresponding to the selected option\n    navigate(`/${option}`); // Update the route path as needed\n  };\n\n  // Render the component only if the user is a lecturer\n  if (userRole !== 'lecturer') {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lecturer Subject Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"subject\",\n      children: \"Select Subject:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"subject\",\n      value: selectedSubject,\n      onChange: handleSubjectChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Subject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), subjects.map((subject, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: subject.code,\n        children: subject.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"additionalOptions\",\n      children: \"Additional Options:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"additionalOptions\",\n      disabled: !selectedSubject,\n      onChange: e => handleOptionSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), additionalOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(InchargePage, \"PQuncy2vzixudsc3HdH3N9gs5i0=\", false, function () {\n  return [useNavigate];\n});\n_c = InchargePage;\nexport default InchargePage;\nvar _c;\n$RefreshReg$(_c, \"InchargePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","InchargePage","lecturerName","userRole","_s","subjects","setSubjects","selectedSubject","setSelectedSubject","additionalOptions","setAdditionalOptions","navigate","fetchSubjects","response","get","Array","isArray","data","console","error","message","handleSubjectChange","e","target","value","handleOptionSelect","option","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","subject","index","code","name","disabled","_c","$RefreshReg$"],"sources":["D:/srms/StudentGradesystem/client/src/Components/SelectionPage/InchargePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate hook\r\n\r\nconst InchargePage = ({ lecturerName, userRole }) => {\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [selectedSubject, setSelectedSubject] = useState('');\r\n  const [additionalOptions, setAdditionalOptions] = useState([]);\r\n  const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n  useEffect(() => {\r\n    const fetchSubjects = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/subjects/lecturer?lecturerName=${lecturerName}`);\r\n        // Check if the response data is an array before setting state\r\n        if (Array.isArray(response.data.data.subjects)) { // Accessing subjects from data property\r\n          setSubjects(response.data.data.subjects);\r\n        } else {\r\n          console.error('Invalid subjects data:', response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching subjects:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchSubjects();\r\n  }, [lecturerName]);\r\n\r\n  useEffect(() => {\r\n    // Additional options based on the selected subject\r\n    if (selectedSubject) {\r\n      setAdditionalOptions(['ICAE', 'Final First Marking', 'Final Second Marking','Composite Sheet']);\r\n    } else {\r\n      setAdditionalOptions([]);\r\n    }\r\n  }, [selectedSubject]);\r\n\r\n  const handleSubjectChange = (e) => {\r\n    setSelectedSubject(e.target.value);\r\n  };\r\n\r\n  // Handle navigation to the selected option\r\n  const handleOptionSelect = (option) => {\r\n    // Navigate to the page corresponding to the selected option\r\n    navigate(`/${option}`); // Update the route path as needed\r\n  };\r\n\r\n  // Render the component only if the user is a lecturer\r\n  if (userRole !== 'lecturer') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lecturer Subject Page</h1>\r\n      <label htmlFor=\"subject\">Select Subject:</label>\r\n      <select id=\"subject\" value={selectedSubject} onChange={handleSubjectChange}>\r\n        <option value=\"\">Select Subject</option>\r\n        {subjects.map((subject, index) => (\r\n          <option key={index} value={subject.code}>{subject.name}</option>\r\n        ))}\r\n      </select>\r\n      <br /><br />\r\n      <label htmlFor=\"additionalOptions\">Additional Options:</label>\r\n      <select id=\"additionalOptions\" disabled={!selectedSubject} onChange={(e) => handleOptionSelect(e.target.value)}>\r\n        <option value=\"\">Select Option</option>\r\n        {additionalOptions.map((option, index) => (\r\n          <option key={index} value={option}>{option}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InchargePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}